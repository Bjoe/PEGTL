# Test with the PEGTL_USE_BOOST_FILESYSTEM option which forces the build to use
# the Boost.Filesystem alternative to std::filesystem. This option is there so
# that consumers who are still building with Boost.Filesystem can work with
# PEGTL, although they still need support for the rest of the C++17 standard.
name: std-filesystem-fallbacks

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  ubuntu-gcc:
    name: ${{ matrix.os }} with ${{ matrix.cc }} (${{ matrix.config }})
    runs-on: ${{ matrix.os }}
    strategy:
      # Run all of them once we start
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        config:
          - Debug
          - Release
        cc:
          - gcc-7
          - gcc-8
        include:
          - cc: gcc-7
            cxx: g++-7
          - cc: gcc-8
            cxx: g++-8

    steps:
      - uses: actions/checkout@v2

      - name: Cache Boost
        uses: actions/cache@v2.1.3
        id: cache-boost-filesystem
        with:
          path: "${{ runner.workspace }}/boost"
          key: boost-filesystem-${{ matrix.os }}

      - name: Install Boost
        shell: bash
        env:
          CACHE_HIT: ${{steps.cache-boost-filesystem.outputs.cache-hit}}
        run: |
          if [[ "$CACHE_HIT" == 'true' ]]; then
            sudo cp --force --recursive ${{ runner.workspace }}/boost/* /
          else
            sudo apt-get update && sudo apt-get install -yq libboost-filesystem-dev
            mkdir -p ${{runner.workspace}}/boost
            for dep in libboost-filesystem-dev; do
              dpkg -L $dep | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ${{runner.workspace}}/boost/
            done
          fi

      - name: Create Build Environment
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: cmake -E make_directory ${{ runner.workspace }}/build

      - name: Configure CMake
        working-directory: ${{ runner.workspace }}/build
        # Note the current convention is to use the -S and -B options here to specify source
        # and build directories, but this is only available with CMake 3.13 and higher.
        # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
        run: cmake -DPEGTL_USE_BOOST_FILESYSTEM=ON -DCMAKE_BUILD_TYPE=${{ matrix.config }} "$GITHUB_WORKSPACE"
        env:
          CC: ${{ matrix.cc }}
          CXX: ${{ matrix.cxx }}

      - name: Build the Project
        working-directory: ${{ runner.workspace }}/build
        # Execute the build.  You can specify a specific target with "--target <NAME>"
        run: cmake --build .

      - name: Run the Tests
        working-directory: ${{ runner.workspace }}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        run: ctest
