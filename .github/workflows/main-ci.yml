name: Main CI

on: [push, pull_request]

jobs:
  linux:
    strategy:
      fail-fast: false
      matrix:
        image:
          # List: https://github.com/conan-io/conan-docker-tools
          - gcc7
          - gcc7-mingw
          - gcc8
          - gcc9
          - gcc9-x86
          - gcc10
          - gcc10-armv7
          - gcc10-armv7hf
          - clang50
          - clang60
          - clang7
          - clang8
          - clang9
          - clang9-x86
          - clang10
          - clang11
        build_type: [Debug, Release]

    runs-on: ubuntu-latest

    container:
      image: conanio/${{matrix.image}}
      options: --user root

    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      run: cmake -E make_directory build

    - name: Configure
      working-directory: build/
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.build_type}}

    - name: Build
      working-directory: build/
      run: cmake --build . --config ${{matrix.build_type}}

    - name: Test
      working-directory: build/
      run: ctest -C ${{matrix.build_type}} --output-on-failure

  linux-gcc-extra:
    strategy:
      fail-fast: false
      matrix:
        flags:
          - "-fno-rtti"
          - "-fsanitize=address"
          - "-fsanitize=undefined"

    runs-on: ubuntu-latest

    container:
      image: conanio/gcc10
      options: --user root

    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      run: cmake -E make_directory build

    - name: Configure
      working-directory: build/
      run: cmake $GITHUB_WORKSPACE -DCMAKE_CXX_FLAGS="${{matrix.flags}}"

    - name: Build
      working-directory: build/
      run: cmake --build .

    - name: Test
      working-directory: build/
      run: ctest --output-on-failure

  linux-clang-extra:
    strategy:
      fail-fast: false
      matrix:
        flags:
          - "-fno-rtti"
          - "-fms-extension"
          - "-fsanitize=address"
          - "-fsanitize=undefined"

    runs-on: ubuntu-latest

    container:
      image: conanio/clang11
      options: --user root

    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      run: cmake -E make_directory build

    - name: Configure
      working-directory: build/
      run: cmake $GITHUB_WORKSPACE -DCMAKE_CXX_FLAGS="${{matrix.flags}}"

    - name: Build
      working-directory: build/
      run: cmake --build .

    - name: Test
      working-directory: build/
      run: ctest --output-on-failure

  macos:
    strategy:
      fail-fast: false
      matrix:
        xcode:
            - '11'
            - '12'
        build_type: [Debug, Release]

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2

    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: ${{matrix.xcode}}

    - name: Create Build Environment
      run: cmake -E make_directory build

    - name: Configure
      working-directory: build/
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=${{matrix.build_type}}

    - name: Build
      working-directory: build/
      run: cmake --build . --config ${{matrix.build_type}}

    - name: Test
      working-directory: build/
      run: ctest -C ${{matrix.build_type}} --output-on-failure

  windows-2016:
    strategy:
      fail-fast: false
      matrix:
        vs:
          - 'Visual Studio 15 2017'
          - 'Visual Studio 15 2017 Win64'
        build_type: [Debug, Release]

    runs-on: windows-2016

    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      run: cmake -E make_directory build

    - name: Configure
      shell: bash
      working-directory: build/
      run: cmake $GITHUB_WORKSPACE -G "${{matrix.vs}}"

    - name: Build
      working-directory: build/
      run: cmake --build . --config ${{matrix.build_type}}

    - name: Test
      working-directory: build/
      run: ctest -C ${{matrix.build_type}} --output-on-failure

  windows:
    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug, Release]

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      run: cmake -E make_directory build

    - name: Configure
      shell: bash
      working-directory: build/
      run: cmake $GITHUB_WORKSPACE -G "Visual Studio 16 2019"

    - name: Build
      working-directory: build/
      run: cmake --build . --config ${{matrix.build_type}}

    - name: Test
      working-directory: build/
      run: ctest -C ${{matrix.build_type}} --output-on-failure

  windows-clang:
    strategy:
      fail-fast: false
      matrix:
        build_type: [Debug, Release]

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      run: cmake -E make_directory build

    - name: Configure
      shell: bash
      working-directory: build/
      run: cmake $GITHUB_WORKSPACE -G "Visual Studio 16 2019" -T ClangCL

    - name: Build
      working-directory: build/
      run: cmake --build . --config ${{matrix.build_type}}

    - name: Test
      working-directory: build/
      run: ctest -C ${{matrix.build_type}} --output-on-failure
